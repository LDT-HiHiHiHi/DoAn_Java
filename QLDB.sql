CREATE DATABASE QLDB
GO
USE QLDB
GO
CREATE TABLE DANGNHAP(
	MANDN CHAR(5) NOT NULL, --Mã người dùng
	TENDANGNHAP NVARCHAR(50) unique, --Tên đăng nhập
	MATKHAU NCHAR(50),
	TRANGTHAI VARCHAR(30),
	CONSTRAINT PK_DANGNHAP PRIMARY KEY (MANDN)
)
CREATE TABLE THONGTIN_NGUOIDUNG(
	MAND CHAR(5) NOT NULL,
	TENND NVARCHAR(50),
	EMAIL VARCHAR(50),
	NGAYSINH DATE,
	MANDN CHAR(5),
	CONSTRAINT PK_THONGTIN_NGUOIDUNG PRIMARY KEY (MAND),
	CONSTRAINT FK_THONGTIN_NGUOIDUNG_DANGNHAP FOREIGN KEY (MANDN) REFERENCES DANGNHAP(MANDN)
)

CREATE TABLE NHOMLIENHE(
	MANHOM CHAR(5) NOT NULL,
	TENNHOMLH NVARCHAR(60),
	CONSTRAINT PK_NLH PRIMARY KEY (MANHOM)
)

CREATE TABLE DANHBA(
	MADB CHAR(5) NOT NULL,
	SDT VARCHAR(12) unique,
	TENDANHBA NVARCHAR(50), --Tên liên hệ
	EMAIL VARCHAR(50),
	GHICHU NVARCHAR(MAX),
	MANHOMLH CHAR(5), --NHÓM LIÊN HỆ: CÓ THỂ LÀ BẠN BÈ, ĐỒNG NGHIỆP, NULL
	CONSTRAINT PK_THONGTINLIENHE PRIMARY KEY (MADB),
	CONSTRAINT FK_THONGTINLIENHE_NHOMLH FOREIGN KEY (MANHOMLH) REFERENCES NHOMLIENHE(MANHOM)
)

CREATE TABLE THONGTINDANHBA(
	MANDN CHAR(5) NOT NULL,
	MADB CHAR(5) NOT NULL,
	NGAYLUU DATE,
	CONSTRAINT PK_THONGTINDANHBA PRIMARY KEY (MANDN,MADB),
	CONSTRAINT FK_THONGTINDANHBA_DANGNHAP FOREIGN KEY (MANDN) REFERENCES DANGNHAP(MANDN),
	CONSTRAINT FK_THONGTINDANHBA_DANHBA FOREIGN KEY (MADB) REFERENCES DANHBA(MADB)
)

ALTER TABLE DANGNHAP 
ADD CONSTRAINT DF_TRANGTHAI DEFAULT 'DISCONNECT' FOR TRANGTHAI 

ALTER TABLE THONGTIN_NGUOIDUNG
ADD CONSTRAINT DF_MAND DEFAULT DBO.AUTO_IDND() FOR MAND

ALTER TABLE DANGNHAP
ADD CONSTRAINT DF_MANDN DEFAULT DBO.AUTO_IDDN() FOR MANDN

--ALTER TABLE DANHBA
--ADD CONSTRAINT DF_MANDN DEFAULT DBO.AUTO_IDNLH() FOR MANHOMLH

GO
CREATE FUNCTION AUTO_IDND()
RETURNS VARCHAR(5)
AS
BEGIN
	DECLARE @ID VARCHAR(5)
	IF (SELECT COUNT(MAND) FROM THONGTIN_NGUOIDUNG) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MAND, 3)) FROM THONGTIN_NGUOIDUNG
		SELECT @ID = CASE
			WHEN @ID >=  0 and @ID < 9 THEN 'KH00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >=  9 THEN 'UN0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 THEN 'UN' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
CREATE FUNCTION AUTO_IDDN()
RETURNS VARCHAR(5)
AS
BEGIN
	DECLARE @ID VARCHAR(5)
	IF (SELECT COUNT(MANDN) FROM DANGNHAP) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MANDN, 3)) FROM DANGNHAP
		SELECT @ID = CASE
			WHEN @ID >=  0 and @ID < 9 THEN 'DN00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >=  9 THEN 'DN0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 THEN 'DN' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
CREATE FUNCTION AUTO_IDNLH()
RETURNS VARCHAR(5)
AS
BEGIN
	DECLARE @ID VARCHAR(5)
	IF (SELECT COUNT(MANHOM) FROM NHOMLIENHE) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MANHOM, 3)) FROM NHOMLIENHE
		SELECT @ID = CASE
			WHEN @ID >=  0 and @ID < 9 THEN 'LH00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >=  9 THEN 'LH0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 THEN 'LH' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END

GO
CREATE TRIGGER CKTENNHOMLH ON NHOMLIENHE
INSTEAD OF INSERT
AS
	DECLARE @TENNHOMLH NVARCHAR(60) = (SELECT TENNHOMLH FROM inserted)
	IF NOT EXISTS(SELECT * FROM NHOMLIENHE WHERE TENNHOMLH=@TENNHOMLH)
GO